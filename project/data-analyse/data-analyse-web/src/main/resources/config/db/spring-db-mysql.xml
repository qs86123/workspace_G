<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- data source -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.mysql.url}" />
        <property name="username" value="${jdbc.mysql.user}" />
        <property name="password" value="${jdbc.mysql.password}" />
<!--         <property name="filters" value="config" /> -->
<!--         <property name="connectionProperties" value="config.decrypt=true" /> -->
        <!-- 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时 -->
        <property name="initialSize" value="3" />
        <!-- 连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接 -->
        <property name="minIdle" value="3" />
        <!-- 连接池在同一时间能够分配的最大活动连接的数量 -->
        <property name="maxActive" value="15" />
        <!-- 获取新连接的等待超时的时间，单位毫秒 -->
        <property name="maxWait" value="60000" />
        <!-- 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值，单位毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="120000" />
        <!-- 用来检测连接是否有效的sql -->
        <property name="validationQuery" value="SELECT 1" />
        <!-- 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
        <property name="testWhileIdle" value="true" />
        <!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 -->
        <property name="testOnBorrow" value="false" />
        <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnReturn" value="false" />
        <!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。
            在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。 -->
        <property name="poolPreparedStatements" value="true" />
        <!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100 -->
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="100" />
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计，这个在有配置druid监控的时候开启 -->
        <!-- property name="filters" value="stat" / -->
    </bean>

    <!-- 配置sqlSessionFactory工厂 -->
    <bean id="pgSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:maps/**/*.xml" />
        <property name="typeAliasesPackage" value="com.changhong.**.jdbc.entity"></property>
    </bean>

    <!--通过扫描的模式 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- <property name="annotationClass" value="org.springframework.stereotype.Repository"
            /> -->
        <property name="sqlSessionFactoryBeanName" value="pgSessionFactory" />
        <property name="basePackage" value="com.changhong.**.jdbc.mapper" />
    </bean>

</beans>