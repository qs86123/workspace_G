<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- web.xml中shiro的filter对应的bean -->
	<!-- shiro的web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证则会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login.action" />
		<!-- unauthorizedUrl指定没有权限操作时跳转的页面 -->
		<property name="unauthorizedUrl" value="/refuse.jsp" />
		<!-- 配置自定义FormAuthenticaitonFilter -->
		<property name="filters">
			<map>
				<entry key="authc" value-ref="customFormAuthenticationFilter"></entry>
			</map>
		</property>
		<!-- 过滤连定义，自上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
				/images/**=anon
				/js/**=anon
				/styles/**=anon
				<!-- 验证码匿名访问 -->
				/validatecode.jsp=anon
				<!-- 使用shiro的退出功能，url路径可以不存在 -->
				/logout.action=logout
				<!-- 取消这种url拦截方式配置权限，在controller层采用注解的方式进行拦截 -->
				<!-- /item/queryItem.action=perms[item:query] -->
				<!-- 配置记住我或者认证通过就可以访问的地址 -->
				/index.jsp = user
				/first.action=user
				/welcome.jsp=user
				<!-- 所有的Url都可以需要认证 -->
				/**=authc
			</value>
		</property>
	</bean>

	<!-- securityManager安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm"></property>
		<property name="cacheManager" ref="cacheManager"></property>
		<!-- 注入session管理器（shiro的session，不是web的session） -->
		<property name="sessionManager" ref="sessionManager"></property>
		<!-- 配置rememberMeManager -->
		<property name="rememberMeManager" ref="rememberMeManager"></property>
	</bean>

	<!-- customRealm自定义Realm -->
	<bean id="customRealm" class="cn.itcast.ssm.shiro.CustomRealm">
		<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>
	<!-- 凭证皮匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<!-- 指定散列算法 -->
		<property name="hashAlgorithmName" value="md5"></property>
		<!-- 指定散列次数 -->
		<property name="hashIterations" value="1"></property>
	</bean>
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 可以不用配置，有默认的 -->
		<!-- <property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/> -->
	</bean>
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置session过期时间，默认30分钟 -->
		<property name="globalSessionTimeout" value="1800000"></property>
		<!-- 是否删除失效的session，默认为true -->
		<property name="deleteInvalidSessions" value="true"></property>
	</bean>
	<!-- 配置自定义FormAuthenticationFilter -->
	<bean id="customFormAuthenticationFilter" class="cn.itcast.ssm.shiro.CustomFormAuthenticationFilter">
		<!-- 这三个属性设置的是页面表单的name属性 -->
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe"></property>
	</bean>

	<!-- 配置rememberMeManeger管理器，写cookie，再登录时取出cookie生成用户信息 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie"></property>
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- 设置cookie的名字，可以通过构造方法设置 -->
		<constructor-arg value="rememberMe" />
		<!-- <property name="name" value="rememberMe" /> -->
		<property name="maxAge" value="2592000" />
	</bean>
</beans>