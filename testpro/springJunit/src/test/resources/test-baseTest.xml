<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	   http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
	   http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
	default-lazy-init="false">

	<description>role 配置</description>
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.changhong.data.preweixin">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath*:/test-db.properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean id="config" name="properties,p"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:/test.properties" />
	</bean>

	<!-- turn on declarative caching -->
	<cache:annotation-driven cache-manager="cacheManager" />
	
	 <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> 
	   <property name="configLocation" value="classpath:/ehcacheTest.xml" /> 
	</bean>
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"> 
        <property name="cacheManager"     ref="cacheManagerFactory" /> 
    </bean>

	<!-- database 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.changhong.data.preweixin" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="org.hibernate.cfg.naming.NamingStrategyDelegator">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
		<!--设置hibernate的是否自动生成DDL的属性
		<property name="generateDdl" value="true" />
		-->
		<property name="showSql" value="true" />
	</bean>

	<!-- jdbc 事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- jdbc 注解式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!--jdbc Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.changhong.data.preweixin"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="txManager" />

	<!-- jdbc setting -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="filters" value="config" />
		<property name="connectionProperties"
			value="config.decrypt=true;config.decrypt.key=${jdbc.publickey}" />
		<property name="useGlobalDataSourceStat" value="true" />
		<property name="initialSize" value="${jdbc.pool.initialSize}" />
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="minIdle" value="3" />
		<property name="maxWait" value="60000"/>
		<property name="timeBetweenEvictionRunsMillis">
			<value>60000</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>120000</value>
		</property>

		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="testOnBorrow">
			<value>false</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>

		<property name="poolPreparedStatements">
			<value>true</value>
		</property>
		<property name="maxOpenPreparedStatements">
			<value>100</value>
		</property>
	</bean>
	
</beans>